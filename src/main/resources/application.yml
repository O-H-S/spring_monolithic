server:
  port: 80
  servlet:
    session:
      cookie:
        domain: ohs.kr # sub1.ohs.kr, sub2.ohs.kr 등 모든 하위 도메인에서 세션 쿠키가 유효
    ssl:
      #key-store: classpath:keystore.p12
      #key-store-password: ****
      #key-store-type: PKCS12
      #key-alias: tomcat
      enabled: false # AWS ALB에서 HTTPS로 브라우저들과 통신하고, WAS(EC2)와 ALB가 같은 VPC 이므로 필요없어짐.

client:
  origin: https://ohs.kr




spring:
  config:
    import:
    - classpath:application_common.yml
  flyway:
    enabled: true
    baseline-on-migrate: ${FLYWAY_BASELINE_ON_MIGRATE:false} # 최초 적용시에만 true로 설정, 적용 후에는 false로 바꾸기.
    baseline-version: ${FLYWAY_BASELINE_VERSION:1}
    outOfOrder: true # true로 설정하면 Flyway는 버전 순서에 상관없이 아직 적용되지 않은 모든 마이그레이션 파일을 실행합니다. 이는 마이그레이션이 순서대로 적용되지 않아도 모든 마이그레이션이 데이터베이스에 반영되도록 합니다.
    custom:
      repair-on-start: ${FLYWAY_REPAIR_ON_START:false}


  #JPA
  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        jdbc.batch_size: 1000
        #order_inserts: true
        #order_updates: true
        #format_sql: true
        #show_sql: true
        #highlight_sql: true
        #use_sql_comments: true
    #defer-datasource-initialization: true
logging:
  config: classpath:logback-prod.xml


